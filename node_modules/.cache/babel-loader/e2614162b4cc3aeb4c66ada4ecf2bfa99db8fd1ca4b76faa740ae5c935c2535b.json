{"ast":null,"code":"// getBatchDetails.js\n\n// This will be filled once useProductFilter loads data\nlet allProducts = [];\n\n// Setup to inject data from useProductFilter\nexport function setProductData(data) {\n  allProducts = data;\n}\n\n// Main function to get full batch info for a given item + batch\nexport default function getBatchDetails(itemName, batchNo) {\n  if (!itemName || !batchNo) return null;\n  const match = allProducts.find(p => p.name === itemName && p.batch === batchNo);\n  return match || null;\n}\n\n// Utility: Return all batches available for an item\ngetBatchDetails.getBatchesForItem = function (itemName) {\n  return allProducts.filter(p => p.name === itemName).map(p => ({\n    batch: p.batch\n  }));\n};\n\n// Utility: Get latest MRP/Rate for item (used in billing fallback)\ngetBatchDetails.getLatestRateForItem = function (itemName) {\n  const match = allProducts.find(p => p.name === itemName);\n  return (match === null || match === void 0 ? void 0 : match.Rate) || 0;\n};\n\n// Hook-in from useProductFilter:\n// useEffect(() => { setProductData(finalProducts); }, [finalProducts]);","map":{"version":3,"names":["allProducts","setProductData","data","getBatchDetails","itemName","batchNo","match","find","p","name","batch","getBatchesForItem","filter","map","getLatestRateForItem","Rate"],"sources":["C:/Users/Jai Ayurved research/Documents/Projects/Projuect Supervisor/src/utils/getBatchDetails.js"],"sourcesContent":["// getBatchDetails.js\r\n\r\n// This will be filled once useProductFilter loads data\r\nlet allProducts = [];\r\n\r\n// Setup to inject data from useProductFilter\r\nexport function setProductData(data) {\r\n  allProducts = data;\r\n}\r\n\r\n// Main function to get full batch info for a given item + batch\r\nexport default function getBatchDetails(itemName, batchNo) {\r\n  if (!itemName || !batchNo) return null;\r\n\r\n  const match = allProducts.find(\r\n    (p) => p.name === itemName && p.batch === batchNo\r\n  );\r\n\r\n  return match || null;\r\n}\r\n\r\n// Utility: Return all batches available for an item\r\ngetBatchDetails.getBatchesForItem = function (itemName) {\r\n  return allProducts\r\n    .filter((p) => p.name === itemName)\r\n    .map((p) => ({ batch: p.batch }));\r\n};\r\n\r\n// Utility: Get latest MRP/Rate for item (used in billing fallback)\r\ngetBatchDetails.getLatestRateForItem = function (itemName) {\r\n  const match = allProducts.find((p) => p.name === itemName);\r\n  return match?.Rate || 0;\r\n};\r\n\r\n// Hook-in from useProductFilter:\r\n// useEffect(() => { setProductData(finalProducts); }, [finalProducts]);\r\n"],"mappings":"AAAA;;AAEA;AACA,IAAIA,WAAW,GAAG,EAAE;;AAEpB;AACA,OAAO,SAASC,cAAcA,CAACC,IAAI,EAAE;EACnCF,WAAW,GAAGE,IAAI;AACpB;;AAEA;AACA,eAAe,SAASC,eAAeA,CAACC,QAAQ,EAAEC,OAAO,EAAE;EACzD,IAAI,CAACD,QAAQ,IAAI,CAACC,OAAO,EAAE,OAAO,IAAI;EAEtC,MAAMC,KAAK,GAAGN,WAAW,CAACO,IAAI,CAC3BC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKL,QAAQ,IAAII,CAAC,CAACE,KAAK,KAAKL,OAC5C,CAAC;EAED,OAAOC,KAAK,IAAI,IAAI;AACtB;;AAEA;AACAH,eAAe,CAACQ,iBAAiB,GAAG,UAAUP,QAAQ,EAAE;EACtD,OAAOJ,WAAW,CACfY,MAAM,CAAEJ,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKL,QAAQ,CAAC,CAClCS,GAAG,CAAEL,CAAC,KAAM;IAAEE,KAAK,EAAEF,CAAC,CAACE;EAAM,CAAC,CAAC,CAAC;AACrC,CAAC;;AAED;AACAP,eAAe,CAACW,oBAAoB,GAAG,UAAUV,QAAQ,EAAE;EACzD,MAAME,KAAK,GAAGN,WAAW,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKL,QAAQ,CAAC;EAC1D,OAAO,CAAAE,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAES,IAAI,KAAI,CAAC;AACzB,CAAC;;AAED;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}