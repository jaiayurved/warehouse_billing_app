{"ast":null,"code":"import * as XLSX from \"xlsx\";\nexport default function exportInvoiceExcel(invoiceData, selectedBuyer) {\n  if (!selectedBuyer) {\n    alert(\"Please select a buyer first!\");\n    return;\n  }\n  const today = new Date();\n  const formattedDate = today.toLocaleDateString('en-GB').replace(/\\//g, \"-\"); // dd-mm-yyyy\n\n  const exportData = invoiceData.map(item => {\n    const billedQty = parseFloat(item.billedQty) || 0;\n    const rate = parseFloat(item.rate) || 0;\n    const discount = parseFloat(item.discount) || 0;\n    const grossAmount = billedQty * rate;\n    const lineTotal = grossAmount * (1 - discount / 100);\n    return {\n      \"Voucher Date\": formattedDate,\n      \"Voucher Type Name\": \"Sales\",\n      // You can customize if needed\n      \"Buyer Name\": selectedBuyer.name,\n      \"Item Name\": item.name,\n      \"Batch No\": item.batch,\n      \"MFG Date\": item.mfg,\n      \"EXP Date\": item.exp,\n      \"Qty (Billed)\": billedQty,\n      \"Rate\": rate,\n      \"Amount\": lineTotal.toFixed(2)\n    };\n  });\n  const wb = XLSX.utils.book_new();\n  const ws = XLSX.utils.json_to_sheet(exportData);\n  XLSX.utils.book_append_sheet(wb, ws, \"Invoice\");\n  const fileName = `Invoice_${selectedBuyer.name}_${formattedDate}.xlsx`;\n  XLSX.writeFile(wb, fileName);\n}","map":{"version":3,"names":["XLSX","exportInvoiceExcel","invoiceData","selectedBuyer","alert","today","Date","formattedDate","toLocaleDateString","replace","exportData","map","item","billedQty","parseFloat","rate","discount","grossAmount","lineTotal","name","batch","mfg","exp","toFixed","wb","utils","book_new","ws","json_to_sheet","book_append_sheet","fileName","writeFile"],"sources":["C:/Users/Jai Ayurved research/Documents/Projects/Projuect Supervisor BACKUP 28 APR/src/utils/exportInvoiceExcel.js"],"sourcesContent":["import * as XLSX from \"xlsx\";\r\n\r\nexport default function exportInvoiceExcel(invoiceData, selectedBuyer) {\r\n  if (!selectedBuyer) {\r\n    alert(\"Please select a buyer first!\");\r\n    return;\r\n  }\r\n\r\n  const today = new Date();\r\n  const formattedDate = today.toLocaleDateString('en-GB').replace(/\\//g, \"-\"); // dd-mm-yyyy\r\n\r\n  const exportData = invoiceData.map((item) => {\r\n    const billedQty = parseFloat(item.billedQty) || 0;\r\n    const rate = parseFloat(item.rate) || 0;\r\n    const discount = parseFloat(item.discount) || 0;\r\n    const grossAmount = billedQty * rate;\r\n    const lineTotal = grossAmount * (1 - discount / 100);\r\n\r\n    return {\r\n      \"Voucher Date\": formattedDate,\r\n      \"Voucher Type Name\": \"Sales\",         // You can customize if needed\r\n      \"Buyer Name\": selectedBuyer.name,\r\n      \"Item Name\": item.name,\r\n      \"Batch No\": item.batch,\r\n      \"MFG Date\": item.mfg,\r\n      \"EXP Date\": item.exp,\r\n      \"Qty (Billed)\": billedQty,\r\n      \"Rate\": rate,\r\n      \"Amount\": lineTotal.toFixed(2),\r\n    };\r\n  });\r\n\r\n  const wb = XLSX.utils.book_new();\r\n  const ws = XLSX.utils.json_to_sheet(exportData);\r\n  XLSX.utils.book_append_sheet(wb, ws, \"Invoice\");\r\n\r\n  const fileName = `Invoice_${selectedBuyer.name}_${formattedDate}.xlsx`;\r\n  XLSX.writeFile(wb, fileName);\r\n}\r\n"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,MAAM;AAE5B,eAAe,SAASC,kBAAkBA,CAACC,WAAW,EAAEC,aAAa,EAAE;EACrE,IAAI,CAACA,aAAa,EAAE;IAClBC,KAAK,CAAC,8BAA8B,CAAC;IACrC;EACF;EAEA,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,MAAMC,aAAa,GAAGF,KAAK,CAACG,kBAAkB,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;;EAE7E,MAAMC,UAAU,GAAGR,WAAW,CAACS,GAAG,CAAEC,IAAI,IAAK;IAC3C,MAAMC,SAAS,GAAGC,UAAU,CAACF,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC;IACjD,MAAME,IAAI,GAAGD,UAAU,CAACF,IAAI,CAACG,IAAI,CAAC,IAAI,CAAC;IACvC,MAAMC,QAAQ,GAAGF,UAAU,CAACF,IAAI,CAACI,QAAQ,CAAC,IAAI,CAAC;IAC/C,MAAMC,WAAW,GAAGJ,SAAS,GAAGE,IAAI;IACpC,MAAMG,SAAS,GAAGD,WAAW,IAAI,CAAC,GAAGD,QAAQ,GAAG,GAAG,CAAC;IAEpD,OAAO;MACL,cAAc,EAAET,aAAa;MAC7B,mBAAmB,EAAE,OAAO;MAAU;MACtC,YAAY,EAAEJ,aAAa,CAACgB,IAAI;MAChC,WAAW,EAAEP,IAAI,CAACO,IAAI;MACtB,UAAU,EAAEP,IAAI,CAACQ,KAAK;MACtB,UAAU,EAAER,IAAI,CAACS,GAAG;MACpB,UAAU,EAAET,IAAI,CAACU,GAAG;MACpB,cAAc,EAAET,SAAS;MACzB,MAAM,EAAEE,IAAI;MACZ,QAAQ,EAAEG,SAAS,CAACK,OAAO,CAAC,CAAC;IAC/B,CAAC;EACH,CAAC,CAAC;EAEF,MAAMC,EAAE,GAAGxB,IAAI,CAACyB,KAAK,CAACC,QAAQ,CAAC,CAAC;EAChC,MAAMC,EAAE,GAAG3B,IAAI,CAACyB,KAAK,CAACG,aAAa,CAAClB,UAAU,CAAC;EAC/CV,IAAI,CAACyB,KAAK,CAACI,iBAAiB,CAACL,EAAE,EAAEG,EAAE,EAAE,SAAS,CAAC;EAE/C,MAAMG,QAAQ,GAAG,WAAW3B,aAAa,CAACgB,IAAI,IAAIZ,aAAa,OAAO;EACtEP,IAAI,CAAC+B,SAAS,CAACP,EAAE,EAAEM,QAAQ,CAAC;AAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}