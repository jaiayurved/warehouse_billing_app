{"ast":null,"code":"import * as XLSX from \"xlsx\";\nexport default function exportInvoiceExcel(invoiceData, selectedBuyer) {\n  if (!selectedBuyer) {\n    alert(\"Please select a buyer first!\");\n    return;\n  }\n  const exportData = invoiceData.map(item => {\n    const billedQty = parseFloat(item.billedQty) || 0;\n    const rate = parseFloat(item.rate) || 0;\n    const discount = parseFloat(item.discount) || 0;\n    const grossAmount = billedQty * rate;\n    const lineTotal = grossAmount * (1 - discount / 100);\n    return {\n      \"Item Name\": item.name,\n      \"Batch\": item.batch,\n      \"MFG\": item.mfg,\n      \"EXP\": item.exp,\n      \"Qty\": item.qty,\n      \"Rate\": rate,\n      \"Billed Qty\": billedQty,\n      \"Discount %\": discount,\n      \"Line Total (₹)\": lineTotal.toFixed(2)\n    };\n  });\n  const wb = XLSX.utils.book_new();\n  const ws = XLSX.utils.json_to_sheet(exportData);\n  XLSX.utils.book_append_sheet(wb, ws, \"Invoice\");\n  const fileName = `Invoice_${selectedBuyer.name}_${new Date().toLocaleDateString('en-GB').replace(/\\//g, '-')}.xlsx`;\n  XLSX.writeFile(wb, fileName);\n}","map":{"version":3,"names":["XLSX","exportInvoiceExcel","invoiceData","selectedBuyer","alert","exportData","map","item","billedQty","parseFloat","rate","discount","grossAmount","lineTotal","name","batch","mfg","exp","qty","toFixed","wb","utils","book_new","ws","json_to_sheet","book_append_sheet","fileName","Date","toLocaleDateString","replace","writeFile"],"sources":["C:/Users/Jai Ayurved research/Documents/Projects/Projuect Supervisor BACKUP 28 APR/src/utils/exportInvoiceExcel.js"],"sourcesContent":["import * as XLSX from \"xlsx\";\r\n\r\nexport default function exportInvoiceExcel(invoiceData, selectedBuyer) {\r\n  if (!selectedBuyer) {\r\n    alert(\"Please select a buyer first!\");\r\n    return;\r\n  }\r\n\r\n  const exportData = invoiceData.map((item) => {\r\n    const billedQty = parseFloat(item.billedQty) || 0;\r\n    const rate = parseFloat(item.rate) || 0;\r\n    const discount = parseFloat(item.discount) || 0;\r\n\r\n    const grossAmount = billedQty * rate;\r\n    const lineTotal = grossAmount * (1 - discount / 100);\r\n\r\n    return {\r\n      \"Item Name\": item.name,\r\n      \"Batch\": item.batch,\r\n      \"MFG\": item.mfg,\r\n      \"EXP\": item.exp,\r\n      \"Qty\": item.qty,\r\n      \"Rate\": rate,\r\n      \"Billed Qty\": billedQty,\r\n      \"Discount %\": discount,\r\n      \"Line Total (₹)\": lineTotal.toFixed(2),\r\n    };\r\n  });\r\n\r\n  const wb = XLSX.utils.book_new();\r\n  const ws = XLSX.utils.json_to_sheet(exportData);\r\n  XLSX.utils.book_append_sheet(wb, ws, \"Invoice\");\r\n\r\n  const fileName = `Invoice_${selectedBuyer.name}_${new Date().toLocaleDateString('en-GB').replace(/\\//g, '-')}.xlsx`;\r\n  XLSX.writeFile(wb, fileName);\r\n}\r\n"],"mappings":"AAAA,OAAO,KAAKA,IAAI,MAAM,MAAM;AAE5B,eAAe,SAASC,kBAAkBA,CAACC,WAAW,EAAEC,aAAa,EAAE;EACrE,IAAI,CAACA,aAAa,EAAE;IAClBC,KAAK,CAAC,8BAA8B,CAAC;IACrC;EACF;EAEA,MAAMC,UAAU,GAAGH,WAAW,CAACI,GAAG,CAAEC,IAAI,IAAK;IAC3C,MAAMC,SAAS,GAAGC,UAAU,CAACF,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC;IACjD,MAAME,IAAI,GAAGD,UAAU,CAACF,IAAI,CAACG,IAAI,CAAC,IAAI,CAAC;IACvC,MAAMC,QAAQ,GAAGF,UAAU,CAACF,IAAI,CAACI,QAAQ,CAAC,IAAI,CAAC;IAE/C,MAAMC,WAAW,GAAGJ,SAAS,GAAGE,IAAI;IACpC,MAAMG,SAAS,GAAGD,WAAW,IAAI,CAAC,GAAGD,QAAQ,GAAG,GAAG,CAAC;IAEpD,OAAO;MACL,WAAW,EAAEJ,IAAI,CAACO,IAAI;MACtB,OAAO,EAAEP,IAAI,CAACQ,KAAK;MACnB,KAAK,EAAER,IAAI,CAACS,GAAG;MACf,KAAK,EAAET,IAAI,CAACU,GAAG;MACf,KAAK,EAAEV,IAAI,CAACW,GAAG;MACf,MAAM,EAAER,IAAI;MACZ,YAAY,EAAEF,SAAS;MACvB,YAAY,EAAEG,QAAQ;MACtB,gBAAgB,EAAEE,SAAS,CAACM,OAAO,CAAC,CAAC;IACvC,CAAC;EACH,CAAC,CAAC;EAEF,MAAMC,EAAE,GAAGpB,IAAI,CAACqB,KAAK,CAACC,QAAQ,CAAC,CAAC;EAChC,MAAMC,EAAE,GAAGvB,IAAI,CAACqB,KAAK,CAACG,aAAa,CAACnB,UAAU,CAAC;EAC/CL,IAAI,CAACqB,KAAK,CAACI,iBAAiB,CAACL,EAAE,EAAEG,EAAE,EAAE,SAAS,CAAC;EAE/C,MAAMG,QAAQ,GAAG,WAAWvB,aAAa,CAACW,IAAI,IAAI,IAAIa,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,OAAO;EACnH7B,IAAI,CAAC8B,SAAS,CAACV,EAAE,EAAEM,QAAQ,CAAC;AAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}