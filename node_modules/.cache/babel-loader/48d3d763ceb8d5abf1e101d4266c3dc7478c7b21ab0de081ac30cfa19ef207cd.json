{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jai Ayurved research\\\\Documents\\\\Projects\\\\Projuect Supervisor\\\\src\\\\utils\\\\submitOrder.js\";\n// utils/submitOrder.js (final with timestamp + toast support)\nimport exportToCSV from './exportToCSV';\nimport sendViaWhatsApp from './sendViaWhatsApp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function submitOrder({\n  cart,\n  dealer,\n  vehicleName,\n  vehicleNumber,\n  notes,\n  totalCTN,\n  showToast\n}) {\n  const dealerName = (dealer === null || dealer === void 0 ? void 0 : dealer[\"Dealer Name\"]) || \"Unknown Dealer\";\n\n  // ‚úÖ 1. Create safe, timestamped filename\n  const timestamp = new Date().toLocaleString().replace(/[/,: ]+/g, \"_\");\n  const safeDealer = dealerName.replace(/\\s+/g, \"_\");\n  const filename = `${safeDealer}_${timestamp}`;\n\n  // ‚úÖ 2. Export to CSV with custom filename\n  exportToCSV(cart, filename, vehicleName, vehicleNumber, notes);\n  if (typeof showToast === 'function') {\n    showToast(\"üßæ CSV auto-downloaded\");\n  }\n\n  // ‚úÖ 3. Build WhatsApp message\n  let msg = `üõí *Factory to office Dispatch Summary*\\n\\n`;\n  msg += `üë§ Dealer: ${dealerName}\\n`;\n  cart.forEach(item => {\n    const totalItemQty = item.entries.reduce((sum, e) => sum + (e.qty || 0) * (e.ctn || 0), 0);\n    msg += `\\nüîπ ${item.name} ‚Äì ${totalItemQty} pcs`;\n    /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"font-bold text-base\",\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 2\n    }, this);\n    item.entries.forEach(entry => {\n      msg += `\\n  Batch: ${entry.batch || '-'}, Qty per CTN: ${entry.qty || 0}, total CTN: ${entry.ctn || 0}`;\n    });\n  });\n  msg += `\\n\\nüöõ Vehicle: ${vehicleName || 'N/A'} (${vehicleNumber || 'N/A'})`;\n  msg += `\\nüì¶ Total CTNs: ${totalCTN || 0}`;\n  if (notes) msg += `\\nüìù Notes: ${notes}`;\n  msg += `\\n\\n‚úÖ CSV attached. Please review.`;\n  console.log(\"üì¶ WhatsApp Message Preview:\\n\", msg);\n\n  // ‚úÖ 4. Open WhatsApp\n  sendViaWhatsApp(\"919829280873\", msg);\n}","map":{"version":3,"names":["exportToCSV","sendViaWhatsApp","jsxDEV","_jsxDEV","submitOrder","cart","dealer","vehicleName","vehicleNumber","notes","totalCTN","showToast","dealerName","timestamp","Date","toLocaleString","replace","safeDealer","filename","msg","forEach","item","totalItemQty","entries","reduce","sum","e","qty","ctn","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","entry","batch","console","log"],"sources":["C:/Users/Jai Ayurved research/Documents/Projects/Projuect Supervisor/src/utils/submitOrder.js"],"sourcesContent":["// utils/submitOrder.js (final with timestamp + toast support)\r\nimport exportToCSV from './exportToCSV';\r\nimport sendViaWhatsApp from './sendViaWhatsApp';\r\n\r\nexport default function submitOrder({ cart, dealer, vehicleName, vehicleNumber, notes, totalCTN, showToast }) {\r\n  const dealerName = dealer?.[\"Dealer Name\"] || \"Unknown Dealer\";\r\n\r\n  // ‚úÖ 1. Create safe, timestamped filename\r\n  const timestamp = new Date().toLocaleString().replace(/[/,: ]+/g, \"_\");\r\n  const safeDealer = dealerName.replace(/\\s+/g, \"_\");\r\n  const filename = `${safeDealer}_${timestamp}`;\r\n\r\n  // ‚úÖ 2. Export to CSV with custom filename\r\n  exportToCSV(cart, filename, vehicleName, vehicleNumber, notes);\r\n\r\n  if (typeof showToast === 'function') {\r\n    showToast(\"üßæ CSV auto-downloaded\");\r\n  }\r\n\r\n  // ‚úÖ 3. Build WhatsApp message\r\n  let msg = `üõí *Factory to office Dispatch Summary*\\n\\n`;\r\n  msg += `üë§ Dealer: ${dealerName}\\n`;\r\n\r\n  cart.forEach(item => {\r\n    const totalItemQty = item.entries.reduce(\r\n      (sum, e) => sum + ((e.qty || 0) * (e.ctn || 0)),\r\n      0\r\n    );\r\n\r\n    msg += `\\nüîπ ${item.name} ‚Äì ${totalItemQty} pcs`;\r\n\t<p className=\"font-bold text-base\">{item.name}</p>\r\n    item.entries.forEach(entry => {\r\n      msg += `\\n  Batch: ${entry.batch || '-'}, Qty per CTN: ${entry.qty || 0}, total CTN: ${entry.ctn || 0}`;\r\n    });\r\n  });\r\n\r\n  msg += `\\n\\nüöõ Vehicle: ${vehicleName || 'N/A'} (${vehicleNumber || 'N/A'})`;\r\n  msg += `\\nüì¶ Total CTNs: ${totalCTN || 0}`;\r\n  if (notes) msg += `\\nüìù Notes: ${notes}`;\r\n  msg += `\\n\\n‚úÖ CSV attached. Please review.`;\r\n\r\n  console.log(\"üì¶ WhatsApp Message Preview:\\n\", msg);\r\n\r\n  // ‚úÖ 4. Open WhatsApp\r\n  sendViaWhatsApp(\"919829280873\", msg);\r\n}\r\n"],"mappings":";AAAA;AACA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,WAAWA,CAAC;EAAEC,IAAI;EAAEC,MAAM;EAAEC,WAAW;EAAEC,aAAa;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAU,CAAC,EAAE;EAC5G,MAAMC,UAAU,GAAG,CAAAN,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAG,aAAa,CAAC,KAAI,gBAAgB;;EAE9D;EACA,MAAMO,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC,CAACC,OAAO,CAAC,UAAU,EAAE,GAAG,CAAC;EACtE,MAAMC,UAAU,GAAGL,UAAU,CAACI,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;EAClD,MAAME,QAAQ,GAAG,GAAGD,UAAU,IAAIJ,SAAS,EAAE;;EAE7C;EACAb,WAAW,CAACK,IAAI,EAAEa,QAAQ,EAAEX,WAAW,EAAEC,aAAa,EAAEC,KAAK,CAAC;EAE9D,IAAI,OAAOE,SAAS,KAAK,UAAU,EAAE;IACnCA,SAAS,CAAC,wBAAwB,CAAC;EACrC;;EAEA;EACA,IAAIQ,GAAG,GAAG,6CAA6C;EACvDA,GAAG,IAAI,cAAcP,UAAU,IAAI;EAEnCP,IAAI,CAACe,OAAO,CAACC,IAAI,IAAI;IACnB,MAAMC,YAAY,GAAGD,IAAI,CAACE,OAAO,CAACC,MAAM,CACtC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,GAAI,CAACC,CAAC,CAACC,GAAG,IAAI,CAAC,KAAKD,CAAC,CAACE,GAAG,IAAI,CAAC,CAAE,EAC/C,CACF,CAAC;IAEDT,GAAG,IAAI,QAAQE,IAAI,CAACQ,IAAI,MAAMP,YAAY,MAAM;IACnD,aAAAnB,OAAA;MAAG2B,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAEV,IAAI,CAACQ;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;IAC/Cd,IAAI,CAACE,OAAO,CAACH,OAAO,CAACgB,KAAK,IAAI;MAC5BjB,GAAG,IAAI,cAAciB,KAAK,CAACC,KAAK,IAAI,GAAG,kBAAkBD,KAAK,CAACT,GAAG,IAAI,CAAC,gBAAgBS,KAAK,CAACR,GAAG,IAAI,CAAC,EAAE;IACzG,CAAC,CAAC;EACJ,CAAC,CAAC;EAEFT,GAAG,IAAI,mBAAmBZ,WAAW,IAAI,KAAK,KAAKC,aAAa,IAAI,KAAK,GAAG;EAC5EW,GAAG,IAAI,oBAAoBT,QAAQ,IAAI,CAAC,EAAE;EAC1C,IAAID,KAAK,EAAEU,GAAG,IAAI,eAAeV,KAAK,EAAE;EACxCU,GAAG,IAAI,oCAAoC;EAE3CmB,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEpB,GAAG,CAAC;;EAElD;EACAlB,eAAe,CAAC,cAAc,EAAEkB,GAAG,CAAC;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}