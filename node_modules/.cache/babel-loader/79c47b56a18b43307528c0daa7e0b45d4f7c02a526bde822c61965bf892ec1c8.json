{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useCartLogic.js\n\nimport { useState, useEffect } from 'react';\nconst STORAGE_KEYS = {\n  CART: \"cart_v3\"\n};\nexport default function useCart(showToast) {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [vehicleName, setVehicleName] = useState(\"\");\n  const [vehicleNumber, setVehicleNumber] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  useEffect(() => {\n    const saveInterval = setInterval(() => {\n      localStorage.setItem(STORAGE_KEYS.CART, JSON.stringify(cart));\n    }, 10000); // Save every 10 seconds\n\n    return () => clearInterval(saveInterval);\n  }, [cart]);\n  useEffect(() => {\n    const stored = JSON.parse(localStorage.getItem(STORAGE_KEYS.CART) || \"[]\");\n    setCart(stored);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(STORAGE_KEYS.CART, JSON.stringify(cart));\n  }, [cart]);\n  const handleAdd = item => {\n    const existing = cart.find(c => c.name === item.name);\n    if (!existing) {\n      const newItem = {\n        name: item.name,\n        entries: [{\n          batch: \"\",\n          mfg: \"\",\n          exp: \"\",\n          actualQty: 0,\n          billedQty: 0,\n          rate: 0,\n          discount: 0\n        }]\n      };\n      setCart(prev => [...prev, newItem]);\n    } else {\n      showToast(\"⚠️ Item already added — use +Batch to add more\");\n    }\n  };\n  const handleRemove = (itemIndex, batchIndex = null) => {\n    const newCart = [...cart];\n    if (batchIndex === null) {\n      newCart.splice(itemIndex, 1);\n    } else {\n      newCart[itemIndex].entries.splice(batchIndex, 1);\n      if (newCart[itemIndex].entries.length === 0) {\n        newCart.splice(itemIndex, 1);\n      }\n    }\n    setCart(newCart);\n    showToast(\"❌ Removed\");\n  };\n  const handleBatchChange = (itemIndex, batchIndex, field, value) => {\n    const newCart = [...cart];\n    const entry = newCart[itemIndex].entries[batchIndex];\n    if ([\"actualQty\", \"rate\", \"discount\"].includes(field)) {\n      entry[field] = parseFloat(value) || 0;\n\n      // Billed Qty Auto Calculation based on scheme\n      if (field === \"actualQty\") {\n        let scheme = 4; // Default 3+1\n        const lowerName = newCart[itemIndex].name.toLowerCase();\n        if (lowerName.includes(\"hair\") || lowerName.includes(\"shampoo\") || lowerName.includes(\"keyuramrit\")) {\n          scheme = 6; // 5+1 for Patent items\n        }\n        if (lowerName.includes(\"keyuramrit\") || lowerName.includes(\"net rate\")) {\n          entry.billedQty = entry.actualQty;\n        } else {\n          entry.billedQty = Math.floor(entry.actualQty * (scheme - 1) / scheme);\n        }\n      }\n    } else {\n      entry[field] = value;\n    }\n    setCart(newCart);\n  };\n  const handleAddBatch = itemIndex => {\n    const newCart = [...cart];\n    newCart[itemIndex].entries.push({\n      batch: \"\",\n      mfg: \"\",\n      exp: \"\",\n      actualQty: 0,\n      billedQty: 0,\n      rate: 0,\n      discount: 0\n    });\n    setCart(newCart);\n  };\n  const handleSubmit = () => {\n    const valid = cart.every(item => item.entries.every(e => e.batch && (e.actualQty > 0 || e.billedQty > 0)));\n    if (!valid) {\n      showToast(\"⚠️ Please fill batch, qty properly\");\n      return;\n    }\n    console.log(\"🛒 Final Order:\", cart);\n    console.log(\"🚚 Vehicle Name:\", vehicleName);\n    console.log(\"🔢 Vehicle Number:\", vehicleNumber);\n    console.log(\"📝 Notes:\", notes);\n    showToast(\"✅ Order submitted (local only)\");\n  };\n  const resetCart = () => {\n    localStorage.removeItem(STORAGE_KEYS.CART);\n    setCart([]);\n    setVehicleName(\"\");\n    setVehicleNumber(\"\");\n    setNotes(\"\");\n  };\n  const totalCTN = cart.reduce((sum, item) => sum + item.entries.reduce((eSum, e) => eSum + (e.billedQty || 0), 0), 0);\n  return {\n    cart,\n    handleAdd,\n    handleRemove,\n    handleBatchChange,\n    handleAddBatch,\n    handleSubmit,\n    resetCart,\n    totalCTN,\n    vehicleName,\n    setVehicleName,\n    vehicleNumber,\n    setVehicleNumber,\n    notes,\n    setNotes\n  };\n}\n_s(useCart, \"RcLdPXmj3uk55T4TJgHwRkeXVdg=\");","map":{"version":3,"names":["useState","useEffect","STORAGE_KEYS","CART","useCart","showToast","_s","cart","setCart","vehicleName","setVehicleName","vehicleNumber","setVehicleNumber","notes","setNotes","saveInterval","setInterval","localStorage","setItem","JSON","stringify","clearInterval","stored","parse","getItem","handleAdd","item","existing","find","c","name","newItem","entries","batch","mfg","exp","actualQty","billedQty","rate","discount","prev","handleRemove","itemIndex","batchIndex","newCart","splice","length","handleBatchChange","field","value","entry","includes","parseFloat","scheme","lowerName","toLowerCase","Math","floor","handleAddBatch","push","handleSubmit","valid","every","e","console","log","resetCart","removeItem","totalCTN","reduce","sum","eSum"],"sources":["C:/Users/Jai Ayurved research/Documents/Projects/Projuect Supervisor/src/hooks/useCartLogic.js"],"sourcesContent":["// src/hooks/useCartLogic.js\n\nimport { useState, useEffect } from 'react';\n\nconst STORAGE_KEYS = {\n  CART: \"cart_v3\"\n};\n\nexport default function useCart(showToast) {\n  const [cart, setCart] = useState([]);\n  const [vehicleName, setVehicleName] = useState(\"\");\n  const [vehicleNumber, setVehicleNumber] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n\n  useEffect(() => {\n    const saveInterval = setInterval(() => {\n      localStorage.setItem(STORAGE_KEYS.CART, JSON.stringify(cart));\n    }, 10000); // Save every 10 seconds\n\n    return () => clearInterval(saveInterval);\n  }, [cart]);\n\n  useEffect(() => {\n    const stored = JSON.parse(localStorage.getItem(STORAGE_KEYS.CART) || \"[]\");\n    setCart(stored);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(STORAGE_KEYS.CART, JSON.stringify(cart));\n  }, [cart]);\n\n  const handleAdd = (item) => {\n    const existing = cart.find(c => c.name === item.name);\n    if (!existing) {\n      const newItem = {\n        name: item.name,\n        entries: [{\n          batch: \"\",\n          mfg: \"\",\n          exp: \"\",\n          actualQty: 0,\n          billedQty: 0,\n          rate: 0,\n          discount: 0\n        }]\n      };\n      setCart(prev => [...prev, newItem]);\n    } else {\n      showToast(\"⚠️ Item already added — use +Batch to add more\");\n    }\n  };\n\n  const handleRemove = (itemIndex, batchIndex = null) => {\n    const newCart = [...cart];\n    if (batchIndex === null) {\n      newCart.splice(itemIndex, 1);\n    } else {\n      newCart[itemIndex].entries.splice(batchIndex, 1);\n      if (newCart[itemIndex].entries.length === 0) {\n        newCart.splice(itemIndex, 1);\n      }\n    }\n    setCart(newCart);\n    showToast(\"❌ Removed\");\n  };\n\n  const handleBatchChange = (itemIndex, batchIndex, field, value) => {\n    const newCart = [...cart];\n    const entry = newCart[itemIndex].entries[batchIndex];\n\n    if ([\"actualQty\", \"rate\", \"discount\"].includes(field)) {\n      entry[field] = parseFloat(value) || 0;\n\n      // Billed Qty Auto Calculation based on scheme\n      if (field === \"actualQty\") {\n        let scheme = 4; // Default 3+1\n        const lowerName = newCart[itemIndex].name.toLowerCase();\n        if (lowerName.includes(\"hair\") || lowerName.includes(\"shampoo\") || lowerName.includes(\"keyuramrit\")) {\n          scheme = 6; // 5+1 for Patent items\n        }\n        if (lowerName.includes(\"keyuramrit\") || lowerName.includes(\"net rate\")) {\n          entry.billedQty = entry.actualQty;\n        } else {\n          entry.billedQty = Math.floor(entry.actualQty * (scheme - 1) / scheme);\n        }\n      }\n    } else {\n      entry[field] = value;\n    }\n\n    setCart(newCart);\n  };\n\n  const handleAddBatch = (itemIndex) => {\n    const newCart = [...cart];\n    newCart[itemIndex].entries.push({\n      batch: \"\",\n      mfg: \"\",\n      exp: \"\",\n      actualQty: 0,\n      billedQty: 0,\n      rate: 0,\n      discount: 0\n    });\n    setCart(newCart);\n  };\n\n  const handleSubmit = () => {\n    const valid = cart.every(item =>\n      item.entries.every(e => e.batch && (e.actualQty > 0 || e.billedQty > 0))\n    );\n    if (!valid) {\n      showToast(\"⚠️ Please fill batch, qty properly\");\n      return;\n    }\n    console.log(\"🛒 Final Order:\", cart);\n    console.log(\"🚚 Vehicle Name:\", vehicleName);\n    console.log(\"🔢 Vehicle Number:\", vehicleNumber);\n    console.log(\"📝 Notes:\", notes);\n    showToast(\"✅ Order submitted (local only)\");\n  };\n\n  const resetCart = () => {\n    localStorage.removeItem(STORAGE_KEYS.CART);\n    setCart([]);\n    setVehicleName(\"\");\n    setVehicleNumber(\"\");\n    setNotes(\"\");\n  };\n\n  const totalCTN = cart.reduce(\n    (sum, item) =>\n      sum + item.entries.reduce((eSum, e) => eSum + (e.billedQty || 0), 0),\n    0\n  );\n\n  return {\n    cart,\n    handleAdd,\n    handleRemove,\n    handleBatchChange,\n    handleAddBatch,\n    handleSubmit,\n    resetCart,\n    totalCTN,\n    vehicleName,\n    setVehicleName,\n    vehicleNumber,\n    setVehicleNumber,\n    notes,\n    setNotes\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}