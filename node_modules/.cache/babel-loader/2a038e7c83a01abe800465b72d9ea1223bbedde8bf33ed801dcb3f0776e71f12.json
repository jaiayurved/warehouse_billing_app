{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst STORAGE_KEYS = {\n  CART: \"cart_v3\"\n};\nexport default function useCart(showToast) {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [vehicleName, setVehicleName] = useState(\"\");\n  const [vehicleNumber, setVehicleNumber] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  useEffect(() => {\n    const stored = JSON.parse(localStorage.getItem(STORAGE_KEYS.CART) || \"[]\");\n    setCart(stored);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(STORAGE_KEYS.CART, JSON.stringify(cart));\n  }, [cart]);\n  const handleAdd = item => {\n    const existing = cart.find(c => c.name === item.name);\n    if (!existing) {\n      const newItem = {\n        name: item.name,\n        entries: [{\n          batch: \"\",\n          qty: 0,\n          ctn: 0\n        }]\n      };\n      setCart(prev => [...prev, newItem]);\n    } else {\n      showToast(\"⚠️ Item already added — use +Batch to add more\");\n    }\n  };\n  const handleRemove = (itemIndex, batchIndex = null) => {\n    const newCart = [...cart];\n    if (batchIndex === null) {\n      newCart.splice(itemIndex, 1);\n    } else {\n      newCart[itemIndex].entries.splice(batchIndex, 1);\n      if (newCart[itemIndex].entries.length === 0) {\n        newCart.splice(itemIndex, 1);\n      }\n    }\n    setCart(newCart);\n    showToast(\"❌ Removed\");\n  };\n  const handleBatchChange = (itemIndex, batchIndex, field, value) => {\n    const newCart = [...cart];\n    newCart[itemIndex].entries[batchIndex][field] = field === \"batch\" ? value : parseInt(value) || 0;\n    setCart(newCart);\n  };\n  const handleAddBatch = itemIndex => {\n    const newCart = [...cart];\n    newCart[itemIndex].entries.push({\n      batch: \"\",\n      qty: 0,\n      ctn: 0\n    });\n    setCart(newCart);\n  };\n  const handleSubmit = () => {\n    const valid = cart.every(item => item.entries.every(e => e.batch && (e.qty > 0 || e.ctn > 0)));\n    if (!valid) {\n      showToast(\"⚠️ Please fill batch, qty or CTN for all entries\");\n      return;\n    }\n    console.log(\"🛒 Final Order:\", cart);\n    console.log(\"🚚 Vehicle Name:\", vehicleName);\n    console.log(\"🔢 Vehicle Number:\", vehicleNumber);\n    console.log(\"📝 Notes:\", notes);\n    showToast(\"✅ Order submitted (local only)\");\n  };\n  const resetCart = () => {\n    localStorage.removeItem(STORAGE_KEYS.CART);\n    setCart([]);\n    setVehicleName(\"\");\n    setVehicleNumber(\"\");\n    setNotes(\"\");\n  };\n  const totalCTN = cart.reduce((sum, item) => sum + item.entries.reduce((eSum, e) => eSum + (e.ctn || 0), 0), 0);\n  return {\n    cart,\n    handleAdd,\n    handleRemove,\n    handleBatchChange,\n    handleAddBatch,\n    handleSubmit,\n    resetCart,\n    totalCTN,\n    vehicleName,\n    setVehicleName,\n    vehicleNumber,\n    setVehicleNumber,\n    notes,\n    setNotes\n  };\n}\n_s(useCart, \"1h6kiNfVtxgw4J9U6aGmtcauAUA=\");","map":{"version":3,"names":["useState","useEffect","STORAGE_KEYS","CART","useCart","showToast","_s","cart","setCart","vehicleName","setVehicleName","vehicleNumber","setVehicleNumber","notes","setNotes","stored","JSON","parse","localStorage","getItem","setItem","stringify","handleAdd","item","existing","find","c","name","newItem","entries","batch","qty","ctn","prev","handleRemove","itemIndex","batchIndex","newCart","splice","length","handleBatchChange","field","value","parseInt","handleAddBatch","push","handleSubmit","valid","every","e","console","log","resetCart","removeItem","totalCTN","reduce","sum","eSum"],"sources":["C:/Users/Jai Ayurved research/Documents/Projuect Supervisor/src/hooks/useCartLogic.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst STORAGE_KEYS = {\n  CART: \"cart_v3\"\n};\n\nexport default function useCart(showToast) {\n  const [cart, setCart] = useState([]);\n  const [vehicleName, setVehicleName] = useState(\"\");\n  const [vehicleNumber, setVehicleNumber] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n\n  useEffect(() => {\n    const stored = JSON.parse(localStorage.getItem(STORAGE_KEYS.CART) || \"[]\");\n    setCart(stored);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(STORAGE_KEYS.CART, JSON.stringify(cart));\n  }, [cart]);\n\n  const handleAdd = (item) => {\n    const existing = cart.find(c => c.name === item.name);\n    if (!existing) {\n      const newItem = {\n        name: item.name,\n        entries: [{ batch: \"\", qty: 0, ctn: 0 }]\n      };\n      setCart(prev => [...prev, newItem]);\n    } else {\n      showToast(\"⚠️ Item already added — use +Batch to add more\");\n    }\n  };\n\n  const handleRemove = (itemIndex, batchIndex = null) => {\n    const newCart = [...cart];\n    if (batchIndex === null) {\n      newCart.splice(itemIndex, 1);\n    } else {\n      newCart[itemIndex].entries.splice(batchIndex, 1);\n      if (newCart[itemIndex].entries.length === 0) {\n        newCart.splice(itemIndex, 1);\n      }\n    }\n    setCart(newCart);\n    showToast(\"❌ Removed\");\n  };\n\n  const handleBatchChange = (itemIndex, batchIndex, field, value) => {\n    const newCart = [...cart];\n    newCart[itemIndex].entries[batchIndex][field] =\n      field === \"batch\" ? value : parseInt(value) || 0;\n    setCart(newCart);\n  };\n\n  const handleAddBatch = (itemIndex) => {\n    const newCart = [...cart];\n    newCart[itemIndex].entries.push({ batch: \"\", qty: 0, ctn: 0 });\n    setCart(newCart);\n  };\n\n  const handleSubmit = () => {\n    const valid = cart.every(item =>\n      item.entries.every(e => e.batch && (e.qty > 0 || e.ctn > 0))\n    );\n    if (!valid) {\n      showToast(\"⚠️ Please fill batch, qty or CTN for all entries\");\n      return;\n    }\n    console.log(\"🛒 Final Order:\", cart);\n    console.log(\"🚚 Vehicle Name:\", vehicleName);\n    console.log(\"🔢 Vehicle Number:\", vehicleNumber);\n    console.log(\"📝 Notes:\", notes);\n    showToast(\"✅ Order submitted (local only)\");\n  };\n\n  const resetCart = () => {\n    localStorage.removeItem(STORAGE_KEYS.CART);\n    setCart([]);\n    setVehicleName(\"\");\n    setVehicleNumber(\"\");\n    setNotes(\"\");\n  };\n\n  const totalCTN = cart.reduce(\n    (sum, item) =>\n      sum + item.entries.reduce((eSum, e) => eSum + (e.ctn || 0), 0),\n    0\n  );\n\n  return {\n    cart,\n    handleAdd,\n    handleRemove,\n    handleBatchChange,\n    handleAddBatch,\n    handleSubmit,\n    resetCart,\n    totalCTN,\n    vehicleName,\n    setVehicleName,\n    vehicleNumber,\n    setVehicleNumber,\n    notes,\n    setNotes\n  };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE;AACR,CAAC;AAED,eAAe,SAASC,OAAOA,CAACC,SAAS,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMc,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACjB,YAAY,CAACC,IAAI,CAAC,IAAI,IAAI,CAAC;IAC1EK,OAAO,CAACO,MAAM,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAENd,SAAS,CAAC,MAAM;IACdiB,YAAY,CAACE,OAAO,CAAClB,YAAY,CAACC,IAAI,EAAEa,IAAI,CAACK,SAAS,CAACd,IAAI,CAAC,CAAC;EAC/D,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMe,SAAS,GAAIC,IAAI,IAAK;IAC1B,MAAMC,QAAQ,GAAGjB,IAAI,CAACkB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKJ,IAAI,CAACI,IAAI,CAAC;IACrD,IAAI,CAACH,QAAQ,EAAE;MACb,MAAMI,OAAO,GAAG;QACdD,IAAI,EAAEJ,IAAI,CAACI,IAAI;QACfE,OAAO,EAAE,CAAC;UAAEC,KAAK,EAAE,EAAE;UAAEC,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE;QAAE,CAAC;MACzC,CAAC;MACDxB,OAAO,CAACyB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEL,OAAO,CAAC,CAAC;IACrC,CAAC,MAAM;MACLvB,SAAS,CAAC,gDAAgD,CAAC;IAC7D;EACF,CAAC;EAED,MAAM6B,YAAY,GAAGA,CAACC,SAAS,EAAEC,UAAU,GAAG,IAAI,KAAK;IACrD,MAAMC,OAAO,GAAG,CAAC,GAAG9B,IAAI,CAAC;IACzB,IAAI6B,UAAU,KAAK,IAAI,EAAE;MACvBC,OAAO,CAACC,MAAM,CAACH,SAAS,EAAE,CAAC,CAAC;IAC9B,CAAC,MAAM;MACLE,OAAO,CAACF,SAAS,CAAC,CAACN,OAAO,CAACS,MAAM,CAACF,UAAU,EAAE,CAAC,CAAC;MAChD,IAAIC,OAAO,CAACF,SAAS,CAAC,CAACN,OAAO,CAACU,MAAM,KAAK,CAAC,EAAE;QAC3CF,OAAO,CAACC,MAAM,CAACH,SAAS,EAAE,CAAC,CAAC;MAC9B;IACF;IACA3B,OAAO,CAAC6B,OAAO,CAAC;IAChBhC,SAAS,CAAC,WAAW,CAAC;EACxB,CAAC;EAED,MAAMmC,iBAAiB,GAAGA,CAACL,SAAS,EAAEC,UAAU,EAAEK,KAAK,EAAEC,KAAK,KAAK;IACjE,MAAML,OAAO,GAAG,CAAC,GAAG9B,IAAI,CAAC;IACzB8B,OAAO,CAACF,SAAS,CAAC,CAACN,OAAO,CAACO,UAAU,CAAC,CAACK,KAAK,CAAC,GAC3CA,KAAK,KAAK,OAAO,GAAGC,KAAK,GAAGC,QAAQ,CAACD,KAAK,CAAC,IAAI,CAAC;IAClDlC,OAAO,CAAC6B,OAAO,CAAC;EAClB,CAAC;EAED,MAAMO,cAAc,GAAIT,SAAS,IAAK;IACpC,MAAME,OAAO,GAAG,CAAC,GAAG9B,IAAI,CAAC;IACzB8B,OAAO,CAACF,SAAS,CAAC,CAACN,OAAO,CAACgB,IAAI,CAAC;MAAEf,KAAK,EAAE,EAAE;MAAEC,GAAG,EAAE,CAAC;MAAEC,GAAG,EAAE;IAAE,CAAC,CAAC;IAC9DxB,OAAO,CAAC6B,OAAO,CAAC;EAClB,CAAC;EAED,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,KAAK,GAAGxC,IAAI,CAACyC,KAAK,CAACzB,IAAI,IAC3BA,IAAI,CAACM,OAAO,CAACmB,KAAK,CAACC,CAAC,IAAIA,CAAC,CAACnB,KAAK,KAAKmB,CAAC,CAAClB,GAAG,GAAG,CAAC,IAAIkB,CAAC,CAACjB,GAAG,GAAG,CAAC,CAAC,CAC7D,CAAC;IACD,IAAI,CAACe,KAAK,EAAE;MACV1C,SAAS,CAAC,kDAAkD,CAAC;MAC7D;IACF;IACA6C,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE5C,IAAI,CAAC;IACpC2C,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE1C,WAAW,CAAC;IAC5CyC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAExC,aAAa,CAAC;IAChDuC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEtC,KAAK,CAAC;IAC/BR,SAAS,CAAC,gCAAgC,CAAC;EAC7C,CAAC;EAED,MAAM+C,SAAS,GAAGA,CAAA,KAAM;IACtBlC,YAAY,CAACmC,UAAU,CAACnD,YAAY,CAACC,IAAI,CAAC;IAC1CK,OAAO,CAAC,EAAE,CAAC;IACXE,cAAc,CAAC,EAAE,CAAC;IAClBE,gBAAgB,CAAC,EAAE,CAAC;IACpBE,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMwC,QAAQ,GAAG/C,IAAI,CAACgD,MAAM,CAC1B,CAACC,GAAG,EAAEjC,IAAI,KACRiC,GAAG,GAAGjC,IAAI,CAACM,OAAO,CAAC0B,MAAM,CAAC,CAACE,IAAI,EAAER,CAAC,KAAKQ,IAAI,IAAIR,CAAC,CAACjB,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAChE,CACF,CAAC;EAED,OAAO;IACLzB,IAAI;IACJe,SAAS;IACTY,YAAY;IACZM,iBAAiB;IACjBI,cAAc;IACdE,YAAY;IACZM,SAAS;IACTE,QAAQ;IACR7C,WAAW;IACXC,cAAc;IACdC,aAAa;IACbC,gBAAgB;IAChBC,KAAK;IACLC;EACF,CAAC;AACH;AAACR,EAAA,CApGuBF,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}