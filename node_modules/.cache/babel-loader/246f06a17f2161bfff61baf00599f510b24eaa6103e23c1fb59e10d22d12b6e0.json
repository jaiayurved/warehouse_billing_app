{"ast":null,"code":"// src/utils/exportToCSV.js (Updated to include MFG & EXP)\nimport{saveAs}from'file-saver';const exportToCSV=(cart,dealerName,vehicleName,vehicleNumber,notes)=>{const headers=['Date','Dealer Name','Product Name','Batch No.','MFG Date','EXP Date','Qty per Carton','No. of Cartons','Total Qty','Vehicle Name','Vehicle Number','Notes'];const date=new Date().toLocaleDateString();const rows=cart.flatMap(item=>item.entries.map(entry=>[date,dealerName,item.name,entry.batch||'-',entry.mfg||'-',entry.exp||'-',entry.qty||0,entry.ctn||0,(entry.qty||0)*(entry.ctn||0),vehicleName,vehicleNumber,notes||\"\"]));const csvContent=[headers,...rows].map(e=>e.join(\",\")).join(\"\\n\");const blob=new Blob([csvContent],{type:\"text/csv;charset=utf-8\"});saveAs(blob,`JAI_Ayurved_Order_${Date.now()}.csv`);};export default exportToCSV;","map":{"version":3,"names":["saveAs","exportToCSV","cart","dealerName","vehicleName","vehicleNumber","notes","headers","date","Date","toLocaleDateString","rows","flatMap","item","entries","map","entry","name","batch","mfg","exp","qty","ctn","csvContent","e","join","blob","Blob","type","now"],"sources":["C:/Users/Jai Ayurved research/Documents/Projuect Supervisor/src/utils/exportToCSV.js"],"sourcesContent":["// src/utils/exportToCSV.js (Updated to include MFG & EXP)\r\nimport { saveAs } from 'file-saver';\r\n\r\nconst exportToCSV = (cart, dealerName, vehicleName, vehicleNumber, notes) => {\r\n  const headers = [\r\n    'Date',\r\n    'Dealer Name',\r\n    'Product Name',\r\n    'Batch No.',\r\n    'MFG Date',\r\n    'EXP Date',\r\n    'Qty per Carton',\r\n    'No. of Cartons',\r\n    'Total Qty',\r\n    'Vehicle Name',\r\n    'Vehicle Number',\r\n    'Notes'\r\n  ];\r\n\r\n  const date = new Date().toLocaleDateString();\r\n\r\n  const rows = cart.flatMap(item => \r\n    item.entries.map(entry => [\r\n      date,\r\n      dealerName,\r\n      item.name,\r\n      entry.batch || '-',\r\n      entry.mfg || '-',\r\n      entry.exp || '-',\r\n      entry.qty || 0,\r\n      entry.ctn || 0,\r\n      (entry.qty || 0) * (entry.ctn || 0),\r\n      vehicleName,\r\n      vehicleNumber,\r\n      notes || \"\"\r\n    ])\r\n  );\r\n\r\n  const csvContent = [headers, ...rows]\r\n    .map(e => e.join(\",\"))\r\n    .join(\"\\n\");\r\n\r\n  const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8\" });\r\n  saveAs(blob, `JAI_Ayurved_Order_${Date.now()}.csv`);\r\n};\r\n\r\nexport default exportToCSV;\r\n"],"mappings":"AAAA;AACA,OAASA,MAAM,KAAQ,YAAY,CAEnC,KAAM,CAAAC,WAAW,CAAGA,CAACC,IAAI,CAAEC,UAAU,CAAEC,WAAW,CAAEC,aAAa,CAAEC,KAAK,GAAK,CAC3E,KAAM,CAAAC,OAAO,CAAG,CACd,MAAM,CACN,aAAa,CACb,cAAc,CACd,WAAW,CACX,UAAU,CACV,UAAU,CACV,gBAAgB,CAChB,gBAAgB,CAChB,WAAW,CACX,cAAc,CACd,gBAAgB,CAChB,OAAO,CACR,CAED,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC,CAE5C,KAAM,CAAAC,IAAI,CAAGT,IAAI,CAACU,OAAO,CAACC,IAAI,EAC5BA,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,KAAK,EAAI,CACxBR,IAAI,CACJL,UAAU,CACVU,IAAI,CAACI,IAAI,CACTD,KAAK,CAACE,KAAK,EAAI,GAAG,CAClBF,KAAK,CAACG,GAAG,EAAI,GAAG,CAChBH,KAAK,CAACI,GAAG,EAAI,GAAG,CAChBJ,KAAK,CAACK,GAAG,EAAI,CAAC,CACdL,KAAK,CAACM,GAAG,EAAI,CAAC,CACd,CAACN,KAAK,CAACK,GAAG,EAAI,CAAC,GAAKL,KAAK,CAACM,GAAG,EAAI,CAAC,CAAC,CACnClB,WAAW,CACXC,aAAa,CACbC,KAAK,EAAI,EAAE,CACZ,CACH,CAAC,CAED,KAAM,CAAAiB,UAAU,CAAG,CAAChB,OAAO,CAAE,GAAGI,IAAI,CAAC,CAClCI,GAAG,CAACS,CAAC,EAAIA,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,CACrBA,IAAI,CAAC,IAAI,CAAC,CAEb,KAAM,CAAAC,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACJ,UAAU,CAAC,CAAE,CAAEK,IAAI,CAAE,wBAAyB,CAAC,CAAC,CACvE5B,MAAM,CAAC0B,IAAI,CAAE,qBAAqBjB,IAAI,CAACoB,GAAG,CAAC,CAAC,MAAM,CAAC,CACrD,CAAC,CAED,cAAe,CAAA5B,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}