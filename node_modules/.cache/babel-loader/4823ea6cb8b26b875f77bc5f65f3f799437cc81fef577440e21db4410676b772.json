{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nexport default function useProductFilter() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"पाक\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(\"https://script.google.com/macros/s/AKfycbyuBBpR3LjZftoWLmuJlABy4vex0CRSCweCq3MS8vh9klL7uTy1C3UO2Yfvx0eX6JE/exec\");\n        const data = await res.json();\n        const grouped = {};\n        data.forEach(row => {\n          var _row$name;\n          const key = (_row$name = row.name) === null || _row$name === void 0 ? void 0 : _row$name.trim();\n          if (!key) return;\n          if (!grouped[key]) {\n            grouped[key] = {\n              name: key,\n              category: row.Category || \"Uncategorized\",\n              batches: []\n            };\n          }\n          grouped[key].batches.push({\n            batch: row.Batch || \"\",\n            mfg: formatDate(row.mfgDate),\n            exp: formatDate(row.expDate)\n          });\n        });\n        setProducts(Object.values(grouped));\n      } catch (err) {\n        console.error(\"❌ Failed to fetch products from Sheet\", err);\n      }\n    };\n    fetchData();\n  }, []);\n  const filteredProducts = products.filter(p => {\n    if (search.trim()) return p.name.toLowerCase().includes(search.toLowerCase());\n    return p.category === selectedCategory;\n  });\n  return {\n    products,\n    filteredProducts,\n    search,\n    setSearch,\n    selectedCategory,\n    setSelectedCategory\n  };\n}\n_s(useProductFilter, \"Hh7lHTlSUmto4adFRCdyCwfVzZE=\");\nfunction formatDate(input) {\n  if (!input) return \"\";\n  const parts = input.split(\"-\");\n  if (parts.length === 3) {\n    const [d, m, y] = parts;\n    return `${m}-${y}`;\n  }\n  return input;\n}","map":{"version":3,"names":["useState","useEffect","useProductFilter","_s","products","setProducts","search","setSearch","selectedCategory","setSelectedCategory","fetchData","res","fetch","data","json","grouped","forEach","row","_row$name","key","name","trim","category","Category","batches","push","batch","Batch","mfg","formatDate","mfgDate","exp","expDate","Object","values","err","console","error","filteredProducts","filter","p","toLowerCase","includes","input","parts","split","length","d","m","y"],"sources":["C:/Users/Jai Ayurved research/Documents/Projects/Projuect Supervisor/src/hooks/useProductFilter.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default function useProductFilter() {\r\n  const [products, setProducts] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(\"पाक\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await fetch(\"https://script.google.com/macros/s/AKfycbyuBBpR3LjZftoWLmuJlABy4vex0CRSCweCq3MS8vh9klL7uTy1C3UO2Yfvx0eX6JE/exec\");\r\n        const data = await res.json();\r\n\r\n        const grouped = {};\r\n\r\n        data.forEach(row => {\r\n          const key = row.name?.trim();\r\n          if (!key) return;\r\n\r\n          if (!grouped[key]) {\r\n            grouped[key] = {\r\n              name: key,\r\n              category: row.Category || \"Uncategorized\",\r\n              batches: [],\r\n            };\r\n          }\r\n\r\n          grouped[key].batches.push({\r\n            batch: row.Batch || \"\",\r\n            mfg: formatDate(row.mfgDate),\r\n            exp: formatDate(row.expDate),\r\n          });\r\n        });\r\n\r\n        setProducts(Object.values(grouped));\r\n      } catch (err) {\r\n        console.error(\"❌ Failed to fetch products from Sheet\", err);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const filteredProducts = products.filter(p => {\r\n    if (search.trim()) return p.name.toLowerCase().includes(search.toLowerCase());\r\n    return p.category === selectedCategory;\r\n  });\r\n\r\n  return {\r\n    products,\r\n    filteredProducts,\r\n    search,\r\n    setSearch,\r\n    selectedCategory,\r\n    setSelectedCategory\r\n  };\r\n}\r\n\r\nfunction formatDate(input) {\r\n  if (!input) return \"\";\r\n  const parts = input.split(\"-\");\r\n  if (parts.length === 3) {\r\n    const [d, m, y] = parts;\r\n    return `${m}-${y}`;\r\n  }\r\n  return input;\r\n}\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACzC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACM,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE/DC,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iHAAiH,CAAC;QAC1I,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAE7B,MAAMC,OAAO,GAAG,CAAC,CAAC;QAElBF,IAAI,CAACG,OAAO,CAACC,GAAG,IAAI;UAAA,IAAAC,SAAA;UAClB,MAAMC,GAAG,IAAAD,SAAA,GAAGD,GAAG,CAACG,IAAI,cAAAF,SAAA,uBAARA,SAAA,CAAUG,IAAI,CAAC,CAAC;UAC5B,IAAI,CAACF,GAAG,EAAE;UAEV,IAAI,CAACJ,OAAO,CAACI,GAAG,CAAC,EAAE;YACjBJ,OAAO,CAACI,GAAG,CAAC,GAAG;cACbC,IAAI,EAAED,GAAG;cACTG,QAAQ,EAAEL,GAAG,CAACM,QAAQ,IAAI,eAAe;cACzCC,OAAO,EAAE;YACX,CAAC;UACH;UAEAT,OAAO,CAACI,GAAG,CAAC,CAACK,OAAO,CAACC,IAAI,CAAC;YACxBC,KAAK,EAAET,GAAG,CAACU,KAAK,IAAI,EAAE;YACtBC,GAAG,EAAEC,UAAU,CAACZ,GAAG,CAACa,OAAO,CAAC;YAC5BC,GAAG,EAAEF,UAAU,CAACZ,GAAG,CAACe,OAAO;UAC7B,CAAC,CAAC;QACJ,CAAC,CAAC;QAEF3B,WAAW,CAAC4B,MAAM,CAACC,MAAM,CAACnB,OAAO,CAAC,CAAC;MACrC,CAAC,CAAC,OAAOoB,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,uCAAuC,EAAEF,GAAG,CAAC;MAC7D;IACF,CAAC;IAEDzB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM4B,gBAAgB,GAAGlC,QAAQ,CAACmC,MAAM,CAACC,CAAC,IAAI;IAC5C,IAAIlC,MAAM,CAACe,IAAI,CAAC,CAAC,EAAE,OAAOmB,CAAC,CAACpB,IAAI,CAACqB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACpC,MAAM,CAACmC,WAAW,CAAC,CAAC,CAAC;IAC7E,OAAOD,CAAC,CAAClB,QAAQ,KAAKd,gBAAgB;EACxC,CAAC,CAAC;EAEF,OAAO;IACLJ,QAAQ;IACRkC,gBAAgB;IAChBhC,MAAM;IACNC,SAAS;IACTC,gBAAgB;IAChBC;EACF,CAAC;AACH;AAACN,EAAA,CAtDuBD,gBAAgB;AAwDxC,SAAS2B,UAAUA,CAACc,KAAK,EAAE;EACzB,IAAI,CAACA,KAAK,EAAE,OAAO,EAAE;EACrB,MAAMC,KAAK,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC;EAC9B,IAAID,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;IACtB,MAAM,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,GAAGL,KAAK;IACvB,OAAO,GAAGI,CAAC,IAAIC,CAAC,EAAE;EACpB;EACA,OAAON,KAAK;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}