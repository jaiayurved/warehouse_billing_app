{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nexport default function useProductFilter() {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"पाक\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(\"https://script.google.com/macros/s/AKfycbyuBBpR3LjZftoWLmuJlABy4vex0CRSCweCq3MS8vh9klL7uTy1C3UO2Yfvx0eX6JE/exec?key=DPRTMNT54$\");\n        const data = await res.json();\n        console.log(\"✅ Sheet Data:\", data);\n        const grouped = {};\n        data.forEach(row => {\n          if (!row.name) return;\n          const key = row.name.trim();\n          if (!grouped[key]) {\n            grouped[key] = {\n              name: key,\n              category: row.Category || \"Uncategorized\",\n              MRP: row.MRP || \"\",\n              batches: []\n            };\n          }\n          grouped[key].batches.push({\n            batch: row.Batch || \"\",\n            mfg: toMMYYYY(row.mfgDate),\n            exp: toMMYYYY(row.expDate)\n          });\n        });\n        const finalProducts = Object.values(grouped);\n        setProducts(finalProducts);\n        setFilteredProducts(finalProducts); // default view\n      } catch (err) {\n        console.error(\"❌ Failed to fetch products\", err);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const result = products.filter(p => {\n      if (search.trim()) {\n        return p.name.toLowerCase().includes(search.toLowerCase());\n      }\n      return p.category === selectedCategory;\n    });\n    setFilteredProducts(result);\n  }, [products, search, selectedCategory]);\n  return {\n    products,\n    filteredProducts,\n    search,\n    setSearch,\n    selectedCategory,\n    setSelectedCategory\n  };\n}\n_s(useProductFilter, \"S7izqoJMKrp5lYxTdHblnPuIGtE=\");\nfunction toMMYYYY(dateStr) {\n  if (!dateStr) return \"\";\n  const d = new Date(dateStr);\n  if (isNaN(d)) return dateStr; // fallback\n  const mm = String(d.getMonth() + 1).padStart(2, \"0\");\n  const yyyy = d.getFullYear();\n  return `${mm}-${yyyy}`;\n}","map":{"version":3,"names":["useState","useEffect","useProductFilter","_s","products","setProducts","filteredProducts","setFilteredProducts","search","setSearch","selectedCategory","setSelectedCategory","fetchData","res","fetch","data","json","console","log","grouped","forEach","row","name","key","trim","category","Category","MRP","batches","push","batch","Batch","mfg","toMMYYYY","mfgDate","exp","expDate","finalProducts","Object","values","err","error","result","filter","p","toLowerCase","includes","dateStr","d","Date","isNaN","mm","String","getMonth","padStart","yyyy","getFullYear"],"sources":["C:/Users/Jai Ayurved research/Documents/Projects/Projuect Supervisor/src/hooks/useProductFilter.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default function useProductFilter() {\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(\"पाक\");\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await fetch(\r\n          \"https://script.google.com/macros/s/AKfycbyuBBpR3LjZftoWLmuJlABy4vex0CRSCweCq3MS8vh9klL7uTy1C3UO2Yfvx0eX6JE/exec?key=DPRTMNT54$\"\r\n        );\r\n        const data = await res.json();\r\n        console.log(\"✅ Sheet Data:\", data);\r\n\r\n        const grouped = {};\r\n\r\n        data.forEach((row) => {\r\n          if (!row.name) return;\r\n\r\n          const key = row.name.trim();\r\n          if (!grouped[key]) {\r\n            grouped[key] = {\r\n              name: key,\r\n              category: row.Category || \"Uncategorized\",\r\n              MRP: row.MRP || \"\",\r\n              batches: [],\r\n            };\r\n          }\r\n\r\n          grouped[key].batches.push({\r\n            batch: row.Batch || \"\",\r\n            mfg: toMMYYYY(row.mfgDate),\r\n            exp: toMMYYYY(row.expDate),\r\n          });\r\n        });\r\n\r\n        const finalProducts = Object.values(grouped);\r\n        setProducts(finalProducts);\r\n        setFilteredProducts(finalProducts); // default view\r\n      } catch (err) {\r\n        console.error(\"❌ Failed to fetch products\", err);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const result = products.filter((p) => {\r\n      if (search.trim()) {\r\n        return p.name.toLowerCase().includes(search.toLowerCase());\r\n      }\r\n      return p.category === selectedCategory;\r\n    });\r\n    setFilteredProducts(result);\r\n  }, [products, search, selectedCategory]);\r\n\r\n  return {\r\n    products,\r\n    filteredProducts,\r\n    search,\r\n    setSearch,\r\n    selectedCategory,\r\n    setSelectedCategory,\r\n  };\r\n}\r\n\r\nfunction toMMYYYY(dateStr) {\r\n  if (!dateStr) return \"\";\r\n  const d = new Date(dateStr);\r\n  if (isNaN(d)) return dateStr; // fallback\r\n  const mm = String(d.getMonth() + 1).padStart(2, \"0\");\r\n  const yyyy = d.getFullYear();\r\n  return `${mm}-${yyyy}`;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}